name: build mgos-combine binary
on:
  push:
    branches: [ main ]
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_version: ${{ steps.read_version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Read Version
      id: read_version
      run: |
        echo "##[set-output name=version;]$(grep "var version" main.go | awk '{gsub(/"/, "", $4); print $4}')"
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ steps.read_version.outputs.version }}
        release_name: Release ${{ steps.read_version.outputs.version }}
        draft: false
        prerelease: false
  build:
    needs: release
    strategy:
      matrix:
        go-version: [1.13.x]
        platform: [ubuntu, macos]
    runs-on: ${{ matrix.platform }}-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Get dependencies
      run: go get -v -t -d ./...
    - name: Build binary
      run: go build -o mgos-combine -v .
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      id: upload-release-asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./mgos-combine
        asset_name: mgos-combine-${{ matrix.platform }}
        asset_content_type: application/x-mach-binary
  dockerize:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Package Docker
      run: |
        docker login docker.pkg.github.com --username yaourdt --password ${{ secrets.GITHUB_TOKEN }}
        docker build . --file Dockerfile --tag docker.pkg.github.com/yaourdt/mgos-combine:${{ needs.release.outputs.release_version }}
        docker push docker.pkg.github.com/yaourdt/mgos-combine:${{ needs.release.outputs.release_version }}
      env:
        CI: true
